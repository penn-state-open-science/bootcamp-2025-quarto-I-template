---
title: "Hello, Penn State"
subtitle: "We are..."
author: "Rick O. Gilmore"
date: "2025-07-08"
format: 
  html:
    preview-links: true
    crossrefs-hover: true
    link-external-icon: true
execute:
  echo: true
  warning: false
knitr:
  opts_chunk:
    fig.path: include/fig/ 
---

## About

This tutorial document is inspired by the 'Hello, Quarto' [tutorial page](https://quarto.org/docs/get-started/hello/rstudio.html).

## Meet Quarto

Quarto enables you to combine text, images, video, and executable code into a document.

### Images

From a URL on the web:

![Quarto logo from <https://quarto.org/quarto.png>](https://quarto.org/quarto.png){#fig-quarto-logo}

From a local img file:

![2025 Bootcamp Banner](include/img/bootcamp-banner.png){#fig-bootcamp-banner}

### Video/Audio

From YouTube:

{{< video https://youtu.be/_f3latmOhew?si=-mi60ml4Nn_KcEmq >}}

From a local file:

{{< video include/vid/rot30.mov >}}

### Computations

In R:

```{r}
#| label: fig-histogram-two-samples
#| fig-cap: "Histogram of two *n*=1,000 samples whose means differ by 0.5."
#| warning: false

library(ggplot2)                                                  # <1>

x0 <- rnorm(n = 1000, mean = 0, sd = 1)                           # <2>
x1 <- rnorm(n = 1000, mean = 0.5, sd = 1)

rand_data <- data.frame(value = c(x0, x1), 
                        sample = rep(c('ctrl', 'expt'), 
                                     each = 1000))                # <3>

rand_data |>                                                      # <4>
  ggplot() +
  geom_histogram(aes(x = value, fill = sample)) 
```

1. Load the `ggplot2` library.
2. Create random data.
3. Create a data frame (rectangular table of data) with two variables (columns): `value` and `sample`.
4. 'Pipe' (`|>') the data to `ggplot` to make a histogram.

In Python:

::: {.callout-note}

Since we are rendering this document within RStudio, we need to configure RStudio to process the Python code. 
To see how this is done, expand the code chunks below by clicking on the 'arrow' icons.

```{r}
#| label: setup-python-within-r
#| lst-lbl: lst-setup-reticulate-for-python-in-r
#| code-fold: true

# Configure Python environment
# https://support.posit.co/hc/en-us/articles/1500012574101-Installing-Python-packages-in-Posit-Cloud

library(reticulate)
virtualenv_create("myenv")
use_virtualenv("myenv", required = TRUE)
virtualenv_install("myenv", c("matplotlib"))
```

:::


Now we can create the plot in Python

```{python}
#| label: fig-plot
#| fig-cap: Some incredibly exciting data, I think.
#| lst-label: lst-plot
#| lst-cap: Code to generate a simple plot in Python

import matplotlib.pyplot as plt

plt.plot([1,23,2,4])
plt.show()
```


### Tables

::: {#tbl-workshop-schedule}

| Topic | Location | Materials |
|:--------------|:----------|-------|
| Quarto (Part I): A tool for open scholarship ([Gilmore](directors.qmd#rick-gilmore)) | W211A | [slides](https://penn-state-open-science.github.io/bootcamp-2025-quarto-I) |
| Questionable research practices ([Lazar](program-committee.qmd#nicole-lazar) & [Valcin](program-committee.qmd#jennifer-valcin))| Dewey Room | |

Workshop details for this session.

:::

### Equations

It's common in many fields to use equations in a scholarly document.
Quarto supports LaTex [equation syntax](https://www.overleaf.com/learn/latex/Learn_LaTeX_in_30_minutes).

For example, this is an inline equation: $sqrt(9)=3$.

This is a display equation, centered in the column:

$$ax^2+bx+c$$ {#eq-polynomial}

### Cross-referencing

We can write Quarto code so that we can easily create linked cross-references to images in our document.
For example, @fig-quarto-logo links to the Quarto logo; @fig-bootcamp-banner links to the Bootcamp banner;  @fig-histogram-two-samples links to the histogram we just made;  @tbl-workshop-schedule links to the table; and @eq-polynomial links to the display (centered) equation.

And by adding labels to code chunks, we can do the same thing for code. The code in @lst-plot produces the figure in @fig-plot.

## Under the hood

Quarto, like Rmarkdown, extends [Markdown](https://www.google.com/url?sa=t&source=web&rct=j&opi=89978449&url=https://www.youtube.com/watch%3Fv%3DTrv2TKgSkq0%26t%3D10&ved=2ahUKEwip47OKgrWOAxWvFFkFHY51AzoQma4LegQIRBAC&usg=AOvVaw1SWscA0dixgr35NkS9OzLA). With Markdown, we write in plain text, but add special characters that format our text or code, or retrieve resources we want for our document. 
For example, we can make text *italic*, **boldface**, or ~~struck through~~.

We can make unordered lists:

- Eggs
- Bread
- Jam

And ordered lists:

1. Star Trek
2. Battlestar Galactica
3. Star Wars

We can [link](https://www.psu.edu) to other sites.

We use hash/pound marks '#' to indicate different sections of our document.
So, the top (Level I) section is indicated by `# Level I`; the next level `## Level II`, etc.
